/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class drone_artkp_kernel_Tracker */

#ifndef _Included_drone_artkp_kernel_Tracker
#define _Included_drone_artkp_kernel_Tracker
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    _initTracker
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_drone_artkp_kernel_Tracker__1initTracker
  (JNIEnv *, jobject);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    _destroyTrackerHandle
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_drone_artkp_kernel_Tracker__1destroyTrackerHandle
  (JNIEnv *, jobject);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    cleanup
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_drone_artkp_kernel_Tracker_cleanup
  (JNIEnv *, jobject);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    setPixelFormat
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_drone_artkp_kernel_Tracker_setPixelFormat
  (JNIEnv *, jobject, jint);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    loadCameraFile
 * Signature: (Ljava/lang/String;FF)Z
 */
JNIEXPORT jboolean JNICALL Java_drone_artkp_kernel_Tracker_loadCameraFile
  (JNIEnv *, jobject, jstring, jfloat, jfloat);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    setLoadUndistLUT
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_drone_artkp_kernel_Tracker_setLoadUndistLUT
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    activateBinaryMarker
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_drone_artkp_kernel_Tracker_activateBinaryMarker
  (JNIEnv *, jobject, jint);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    setMarkerMode
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_drone_artkp_kernel_Tracker_setMarkerMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    changeCameraSize
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_drone_artkp_kernel_Tracker_changeCameraSize
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    setUndistortionMode
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_drone_artkp_kernel_Tracker_setUndistortionMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    setPoseEstimator
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_drone_artkp_kernel_Tracker_setPoseEstimator
  (JNIEnv *, jobject, jint);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    setBorderWidth
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_drone_artkp_kernel_Tracker_setBorderWidth
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    setThreshold
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_drone_artkp_kernel_Tracker_setThreshold
  (JNIEnv *, jobject, jint);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    getThreshold
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_drone_artkp_kernel_Tracker_getThreshold
  (JNIEnv *, jobject);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    activateAutoThreshold
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_drone_artkp_kernel_Tracker_activateAutoThreshold
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    isAutoThresholdActivated
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_drone_artkp_kernel_Tracker_isAutoThresholdActivated
  (JNIEnv *, jobject);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    setNumAutoThresholdRetries
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_drone_artkp_kernel_Tracker_setNumAutoThresholdRetries
  (JNIEnv *, jobject, jint);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    setImageProcessingMode
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_drone_artkp_kernel_Tracker_setImageProcessingMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    getModelViewMatrix
 * Signature: ()[F
 */
JNIEXPORT jfloatArray JNICALL Java_drone_artkp_kernel_Tracker_getModelViewMatrix
  (JNIEnv *, jobject);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    getProjectionMatrix
 * Signature: ()[F
 */
JNIEXPORT jfloatArray JNICALL Java_drone_artkp_kernel_Tracker_getProjectionMatrix
  (JNIEnv *, jobject);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    getDescription
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_drone_artkp_kernel_Tracker_getDescription
  (JNIEnv *, jobject);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    getPixelFormat
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_drone_artkp_kernel_Tracker_getPixelFormat
  (JNIEnv *, jobject);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    getBitsPerPixel
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_drone_artkp_kernel_Tracker_getBitsPerPixel
  (JNIEnv *, jobject);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    getNumLoadablePatterns
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_drone_artkp_kernel_Tracker_getNumLoadablePatterns
  (JNIEnv *, jobject);

/*
 * Class:     drone_artkp_kernel_Tracker
 * Method:    calcOpenGLMatrixFromMarker
 * Signature: (JFFF[F)F
 */
JNIEXPORT jfloat JNICALL Java_drone_artkp_kernel_Tracker_calcOpenGLMatrixFromMarker
  (JNIEnv *, jobject, jlong, jfloat, jfloat, jfloat, jfloatArray);

#ifdef __cplusplus
}
#endif
#endif
